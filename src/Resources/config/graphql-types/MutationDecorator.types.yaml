MutationDecorator:
    type: object
    decorator: true
    config:
        fields:
            CreateOrder:
                type: Order!
                description: "Creates complete order with products and addresses"
                args:
                    input:
                        type: OrderInput!
                        validation: cascade
                resolve: "@=mutation('createOrderMutation', args, validator)"
            Login:
                type: Token!
                description: "Login user and return access and refresh tokens"
                args:
                    input:
                        type: LoginInput!
                resolve: "@=mutation('loginMutation', args)"
            Logout:
                type: Boolean!
                description: "Logout user"
                resolve: "@=mutation('logoutMutation')"
            RefreshTokens:
                type: Token!
                description: "Refreshes access and refresh tokens"
                args:
                    input:
                        type: RefreshTokenInput!
                resolve: "@=mutation('refreshTokensMutation', args)"
            ChangePassword:
                type: 'CurrentCustomerUser!'
                description: "Changes customer user password"
                args:
                    input:
                        type: ChangePasswordInput!
                        validation: cascade
                resolve: "@=mutation('changePasswordMutation', args, validator)"
            ChangePersonalData:
                type: 'CurrentCustomerUser!'
                description: "Changes customer user personal data"
                args:
                    input:
                        type: ChangePersonalDataInput!
                        validation: cascade
                resolve: "@=mutation('changePersonalDataMutation', args, validator)"
            Register:
                type: Token!
                description: "Register new customer user"
                args:
                    input:
                        type: RegistrationDataInput!
                        validation: cascade
                resolve: "@=mutation('registerMutation', args, validator)"
            NewsletterSubscribe:
                type: Boolean!
                description: "Subscribe for e-mail newsletter"
                args:
                    input:
                        type: NewsletterSubscriptionDataInput!
                        validation: cascade
                resolve: "@=mutation('newsletterSubscribeMutation', args, validator)"
            AddProductToList:
                type: ProductList!
                description: "Adds a product to a product list"
                args:
                    input:
                        type: ProductListUpdateInput!
                resolve: "@=mutation('addProductToListMutation', args)"
            RemoveProductFromList:
                type: ProductList
                description: "Removes a product from a product list"
                args:
                    input:
                        type: ProductListUpdateInput!
                resolve: "@=mutation('removeProductFromListMutation', args)"
            RemoveProductList:
                type: ProductList
                description: "Removes the product list"
                args:
                    input:
                        type: ProductListInput!
                resolve: "@=mutation('removeProductListMutation', args)"
